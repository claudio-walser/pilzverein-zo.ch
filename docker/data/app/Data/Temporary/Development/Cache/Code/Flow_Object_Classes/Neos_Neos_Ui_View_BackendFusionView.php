<?php 
namespace Neos\Neos\Ui\View;

/*
 * This file is part of the Neos.Neos.Ui package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Fusion\View\FusionView;

class BackendFusionView_Original extends FusionView
{
    public function __construct(array $options = [])
    {
        parent::__construct($options);
        $this->setFusionPathPattern('resource://@package/Private/Fusion/Backend');
    }
}

#
# Start of Flow generated Proxy code
#
namespace Neos\Neos\Ui\View;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * 
 */
class BackendFusionView extends BackendFusionView_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        $arguments = func_get_args();
        call_user_func_array('parent::__construct', $arguments);
        if ('Neos\Neos\Ui\View\BackendFusionView' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'supportedOptions' => 'array',
  'fusionParser' => 'Neos\\Fusion\\Core\\Parser',
  'fallbackView' => 'Neos\\Flow\\Mvc\\View\\ViewInterface',
  'parsedFusion' => 'array',
  'fusionPath' => 'string',
  'fallbackViewEnabled' => 'boolean',
  'fusionRuntime' => 'Neos\\Fusion\\Core\\Runtime',
  'options' => 'array',
  'variables' => 'array',
  'controllerContext' => 'Neos\\Flow\\Mvc\\Controller\\ControllerContext',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->fallbackView = new \Neos\FluidAdaptor\View\TemplateView(NULL);
        $this->fusionParser = new \Neos\Fusion\Core\Parser();
        $this->Flow_Injected_Properties = array (
  0 => 'typoScriptParser',
  1 => 'fallbackView',
  2 => 'fusionParser',
);
    }
}
# PathAndFilename: /var/www/html/neos/Packages/Application/Neos.Neos.Ui/Classes/View/BackendFusionView.php
#