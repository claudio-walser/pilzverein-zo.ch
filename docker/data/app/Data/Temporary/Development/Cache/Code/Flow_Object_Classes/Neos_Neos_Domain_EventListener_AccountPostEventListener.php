<?php 
namespace Neos\Neos\Domain\EventListener;

/*
 * This file is part of the Neos.Neos package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Doctrine\ORM\Event\LifecycleEventArgs;
use Neos\Flow\Annotations as Flow;
use Neos\Flow\Cache\CacheManager;
use Neos\Flow\Security\Account;

/**
 * Doctrine event listener for clearing the Neos configuration version cache on account changes.
 *
 * @Flow\Scope("singleton")
 */
class AccountPostEventListener_Original
{
    /**
     * @var CacheManager
     * @Flow\Inject
     */
    protected $cacheManager;

    /**
     * @param LifecycleEventArgs $eventArgs
     * @return void
     */
    public function postPersist(LifecycleEventArgs $eventArgs)
    {
        if ($eventArgs->getEntity() instanceof Account) {
            $this->flushConfigurationCache();
        }
    }

    /**
     * @param LifecycleEventArgs $eventArgs
     * @return void
     */
    public function postUpdate(LifecycleEventArgs $eventArgs)
    {
        if ($eventArgs->getEntity() instanceof Account) {
            $this->flushConfigurationCache();
        }
    }

    /**
     * @param LifecycleEventArgs $eventArgs
     * @return void
     */
    public function postRemove(LifecycleEventArgs $eventArgs)
    {
        if ($eventArgs->getEntity() instanceof Account) {
            $this->flushConfigurationCache();
        }
    }

    /**
     * @return void
     */
    protected function flushConfigurationCache()
    {
        $this->cacheManager->getCache('Neos_Neos_Configuration_Version')->flush();
    }
}

#
# Start of Flow generated Proxy code
#
namespace Neos\Neos\Domain\EventListener;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * Doctrine event listener for clearing the Neos configuration version cache on account changes.
 * @\Neos\Flow\Annotations\Scope("singleton")
 */
class AccountPostEventListener extends AccountPostEventListener_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if (get_class($this) === 'Neos\Neos\Domain\EventListener\AccountPostEventListener') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Domain\EventListener\AccountPostEventListener', $this);
        if ('Neos\Neos\Domain\EventListener\AccountPostEventListener' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'cacheManager' => 'Neos\\Flow\\Cache\\CacheManager',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {
        if (get_class($this) === 'Neos\Neos\Domain\EventListener\AccountPostEventListener') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Neos\Domain\EventListener\AccountPostEventListener', $this);

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->Flow_Proxy_LazyPropertyInjection('Neos\Flow\Cache\CacheManager', 'Neos\Flow\Cache\CacheManager', 'cacheManager', '0c52ee847923f7f71a81584e4050b3ca', function() { return \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Cache\CacheManager'); });
        $this->Flow_Injected_Properties = array (
  0 => 'cacheManager',
);
    }
}
# PathAndFilename: /var/www/html/neos/Packages/Application/Neos.Neos/Classes/Domain/EventListener/AccountPostEventListener.php
#