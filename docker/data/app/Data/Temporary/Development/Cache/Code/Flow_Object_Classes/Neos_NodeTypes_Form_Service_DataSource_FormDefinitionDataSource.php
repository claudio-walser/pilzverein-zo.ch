<?php 
namespace Neos\NodeTypes\Form\Service\DataSource;

/*
 * This file is part of the Neos.NodeTypes.Form package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Neos\Service\DataSource\AbstractDataSource;
use Neos\ContentRepository\Domain\Model\NodeInterface;
use Neos\Flow\Annotations as Flow;

class FormDefinitionDataSource_Original extends AbstractDataSource
{

    /**
     * @var string
     */
    protected static $identifier = 'neos-nodetypes-form-definitions';

    /**
     * @Flow\Inject
     * @var \Neos\Form\Persistence\YamlPersistenceManager
     */
    protected $yamlPersistenceManager;

    /**
     * @param NodeInterface|null $node
     * @param array $arguments
     * @return \Neos\Flow\Persistence\QueryResultInterface
     */
    public function getData(NodeInterface $node = null, array $arguments)
    {
        $formDefinitions['']['label'] = '';
        $forms = $this->yamlPersistenceManager->listForms();

        foreach ($forms as $form) {
            $formDefinitions[$form['identifier']]['label'] = $form['name'];
        }

        return $formDefinitions;
    }
}

#
# Start of Flow generated Proxy code
#
namespace Neos\NodeTypes\Form\Service\DataSource;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * 
 */
class FormDefinitionDataSource extends FormDefinitionDataSource_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if ('Neos\NodeTypes\Form\Service\DataSource\FormDefinitionDataSource' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'identifier' => 'string',
  'yamlPersistenceManager' => '\\Neos\\Form\\Persistence\\YamlPersistenceManager',
  'controllerContext' => 'Neos\\Flow\\Mvc\\Controller\\ControllerContext',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->Flow_Proxy_LazyPropertyInjection('Neos\Form\Persistence\YamlPersistenceManager', 'Neos\Form\Persistence\YamlPersistenceManager', 'yamlPersistenceManager', '8481b9925edc7f3c67f81d76e5398491', function() { return \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Form\Persistence\YamlPersistenceManager'); });
        $this->Flow_Injected_Properties = array (
  0 => 'yamlPersistenceManager',
);
    }
}
# PathAndFilename: /var/www/html/neos/Packages/Application/Neos.NodeTypes.Form/Classes/Service/DataSource/FormDefinitionDataSource.php
#